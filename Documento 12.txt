GraphQL vs REST: una comparación desde la perspectiva de eficiencia de desempeño. 
Autores
Christian Guillén Drija
Reynaldo Quintero
Asher Kleiman
Resumen
el estilo arquitectónico conocido como transferencia de estado representacional  rest según sus  siglas en
inglés  ha modelado y estandarizado la comunicación cliente-servidor a través del protocolo de transferencia de
hipertexto  http   según roy fielding  creador de rest  este estilo consiste
en un conjunto de restricciones arquitectónicas que enfatizan la escalabilidad de las interacciones entre los componentes
 así como la generalidad las interfaces utilizadas  el despliegue independiente de dichos componentes 
la aplicación de componentes intermediarios para la reducción de la latencia  la preponderancia de la
seguridad y la encapsulación de los sistemas legacy  como consecuencia  rest se ha convertido
en el estilo más aplicado en la comunicación con una interfaz de programación de aplicaciones 
api   por otra parte  graphql es una tecnología basada en un lenguaje de
consultas de datos para api’s que se ha constituido en una alternativa al estilo rest 
 en este trabajo de investigación  se realizó una comparación de rest y graphql como
mecanismos arquitectónicos desde una perspectiva de calidad  específicamente centrada en la eficiencia de desempeño 
en el marco del estándar iso iec 9126 e iso iec 25000  las subcaracterísticas de
eficiencia de desempeño evaluadas fueron  comportamiento temporal  utilización de recursos y capacidad  para
cada una de dichas subcaracterísticas  se aplicaron métricas  a saber  para el comportamiento
temporal se aplicaron las métricas tiempo de respuesta y rendimiento  para la utilización de recursos
 se aplicaron las métricas  utilización de la memoria  utilización de caché  overfetching
y underfetching   y para capacidad  se aplicaron las métricas capacidad y velocidad bajo
estrés  para el desarrollo de este trabajo se seleccionó un caso de estudio que permitiera
evidenciar las características de los dos mecanismos  asimismo  para la obtención de datos cuantitativos
que permitiesen establecer comparaciones  se diseñaron dos api’s que con base en el caso de
estudio escogido  respondieran fielmente a las restricciones que caracterizan a los dos mecanismos arquitectónicos 
los resultados obtenidos  una vez ejecutados los casos de prueba  permiten inferir que rest
posee una mayor rapidez de respuesta que graphql  debido a la naturaleza dinámica de las
peticiones que pueden realizarse en las que se puede especificar con mayor granularidad la información requerida
a través de consultas anidadas  graphql parece ser más eficiente en lo relativo al underfetching
y al overfetching   en general  graphql debería utilizarse cuando se requiere menor utilización
de la memoria  cuando los recursos que la api maneja están estrechamente relacionados y cuando
no sea necesario utilizar la totalidad de la información obtenida  por otra parte  rest
debería utilizarse en caso de necesitarse mayor velocidad de respuesta y cuando se requiera utilizar la
totalidad de la información de los recursos manejados 